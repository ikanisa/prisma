/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/iam/org/create": {
    /** Create Organization */
    post: operations["create_organization_api_iam_org_create_post"];
  };
  "/api/iam/members/list": {
    /** List Members */
    get: operations["list_members_api_iam_members_list_get"];
  };
  "/api/iam/members/invite": {
    /** Invite Member */
    post: operations["invite_member_api_iam_members_invite_post"];
  };
  "/api/release-controls/check": {
    /** Check Release Controls */
    post: operations["check_release_controls_api_release_controls_check_post"];
  };
  "/api/iam/members/accept": {
    /** Accept Invite */
    post: operations["accept_invite_api_iam_members_accept_post"];
  };
  "/api/iam/members/revoke-invite": {
    /** Revoke Invite */
    post: operations["revoke_invite_api_iam_members_revoke_invite_post"];
  };
  "/api/admin/org/settings": {
    /** Get Admin Org Settings */
    get: operations["get_admin_org_settings_api_admin_org_settings_get"];
    /** Update Admin Org Settings */
    post: operations["update_admin_org_settings_api_admin_org_settings_post"];
  };
  "/api/admin/auditlog/list": {
    /** List Admin Audit Log */
    get: operations["list_admin_audit_log_api_admin_auditlog_list_get"];
  };
  "/api/admin/impersonation/list": {
    /** List Impersonation Grants */
    get: operations["list_impersonation_grants_api_admin_impersonation_list_get"];
  };
  "/api/admin/impersonation/request": {
    /** Request Impersonation */
    post: operations["request_impersonation_api_admin_impersonation_request_post"];
  };
  "/api/admin/impersonation/approve": {
    /** Approve Impersonation */
    post: operations["approve_impersonation_api_admin_impersonation_approve_post"];
  };
  "/api/admin/impersonation/revoke": {
    /** Revoke Impersonation */
    post: operations["revoke_impersonation_api_admin_impersonation_revoke_post"];
  };
  "/api/iam/members/update-role": {
    /** Update Member Role */
    post: operations["update_member_role_api_iam_members_update_role_post"];
  };
  "/api/iam/profile/get": {
    /** Get Profile */
    get: operations["get_profile_api_iam_profile_get_get"];
  };
  "/api/iam/profile/update": {
    /** Update Profile */
    post: operations["update_profile_api_iam_profile_update_post"];
  };
  "/api/iam/teams/create": {
    /** Create Team */
    post: operations["create_team_api_iam_teams_create_post"];
  };
  "/api/iam/teams/add-member": {
    /** Add Team Member */
    post: operations["add_team_member_api_iam_teams_add_member_post"];
  };
  "/api/iam/teams/remove-member": {
    /** Remove Team Member */
    post: operations["remove_team_member_api_iam_teams_remove_member_post"];
  };
  "/v1/rag/ingest": {
    /** Ingest */
    post: operations["ingest_v1_rag_ingest_post"];
  };
  "/v1/rag/search": {
    /** Search */
    post: operations["search_v1_rag_search_post"];
  };
  "/v1/rag/reembed": {
    /** Reembed */
    post: operations["reembed_v1_rag_reembed_post"];
  };
  "/api/ada/run": {
    /** List Ada Runs */
    get: operations["list_ada_runs_api_ada_run_get"];
    /** Create Ada Run */
    post: operations["create_ada_run_api_ada_run_post"];
  };
  "/api/ada/exception/update": {
    /** Update Ada Exception */
    post: operations["update_ada_exception_api_ada_exception_update_post"];
  };
  "/api/controls": {
    /** Get Controls */
    get: operations["get_controls_api_controls_get"];
    /** Create Control */
    post: operations["create_control_api_controls_post"];
  };
  "/api/controls/walkthrough": {
    /** Create Control Walkthrough */
    post: operations["create_control_walkthrough_api_controls_walkthrough_post"];
  };
  "/api/controls/test/run": {
    /** Run Control Test */
    post: operations["run_control_test_api_controls_test_run_post"];
  };
  "/api/recon": {
    /** List Reconciliations */
    get: operations["list_reconciliations_api_recon_get"];
  };
  "/api/recon/create": {
    /** Create Reconciliation */
    post: operations["create_reconciliation_api_recon_create_post"];
  };
  "/api/recon/add-item": {
    /** Add Reconciliation Item */
    post: operations["add_reconciliation_item_api_recon_add_item_post"];
  };
  "/api/recon/close": {
    /** Close Reconciliation */
    post: operations["close_reconciliation_api_recon_close_post"];
  };
  "/v1/tasks": {
    /** List Tasks */
    get: operations["list_tasks_v1_tasks_get"];
    /** Create Task */
    post: operations["create_task_v1_tasks_post"];
  };
  "/v1/tasks/{task_id}": {
    /** Update Task */
    patch: operations["update_task_v1_tasks__task_id__patch"];
  };
  "/v1/tasks/{task_id}/comments": {
    /** List Task Comments */
    get: operations["list_task_comments_v1_tasks__task_id__comments_get"];
    /** Create Task Comment */
    post: operations["create_task_comment_v1_tasks__task_id__comments_post"];
  };
  "/v1/tasks/{task_id}/attachments": {
    /** Attach Document To Task */
    post: operations["attach_document_to_task_v1_tasks__task_id__attachments_post"];
  };
  "/v1/storage/documents": {
    /** List Documents Endpoint */
    get: operations["list_documents_endpoint_v1_storage_documents_get"];
    /** Upload Document Endpoint */
    post: operations["upload_document_endpoint_v1_storage_documents_post"];
  };
  "/v1/storage/documents/{document_id}": {
    /** Delete Document Endpoint */
    delete: operations["delete_document_endpoint_v1_storage_documents__document_id__delete"];
  };
  "/v1/storage/documents/{document_id}/restore": {
    /** Restore Document Endpoint */
    post: operations["restore_document_endpoint_v1_storage_documents__document_id__restore_post"];
  };
  "/v1/storage/sign": {
    /** Sign Document Endpoint */
    post: operations["sign_document_endpoint_v1_storage_sign_post"];
  };
  "/v1/documents/{document_id}/extraction": {
    /** Document Extraction Update */
    post: operations["document_extraction_update_v1_documents__document_id__extraction_post"];
  };
  "/v1/notifications": {
    /** List Notifications */
    get: operations["list_notifications_v1_notifications_get"];
  };
  "/v1/notifications/{notification_id}": {
    /** Update Notification */
    patch: operations["update_notification_v1_notifications__notification_id__patch"];
  };
  "/v1/notifications/mark-all": {
    /** Mark All Notifications */
    post: operations["mark_all_notifications_v1_notifications_mark_all_post"];
  };
  "/v1/onboarding/start": {
    /** Onboarding Start */
    post: operations["onboarding_start_v1_onboarding_start_post"];
  };
  "/v1/policy-packs/update": {
    /** Update Policy Pack Endpoint */
    post: operations["update_policy_pack_endpoint_v1_policy_packs_update_post"];
  };
  "/v1/onboarding/link-doc": {
    /** Onboarding Link Document */
    post: operations["onboarding_link_document_v1_onboarding_link_doc_post"];
  };
  "/v1/onboarding/commit": {
    /** Onboarding Commit */
    post: operations["onboarding_commit_v1_onboarding_commit_post"];
  };
  "/v1/autonomy/status": {
    /** Autonomy Status */
    get: operations["autonomy_status_v1_autonomy_status_get"];
  };
  "/v1/knowledge/drive/metadata": {
    /** Knowledge Drive Metadata */
    get: operations["knowledge_drive_metadata_v1_knowledge_drive_metadata_get"];
  };
  "/v1/knowledge/drive/status": {
    /** Knowledge Drive Status */
    get: operations["knowledge_drive_status_v1_knowledge_drive_status_get"];
  };
  "/v1/knowledge/web-sources": {
    /** Knowledge Web Sources */
    get: operations["knowledge_web_sources_v1_knowledge_web_sources_get"];
  };
  "/v1/knowledge/corpora": {
    /** Knowledge Create Corpus */
    post: operations["knowledge_create_corpus_v1_knowledge_corpora_post"];
  };
  "/v1/knowledge/sources": {
    /** Knowledge Create Source */
    post: operations["knowledge_create_source_v1_knowledge_sources_post"];
  };
  "/v1/knowledge/sources/{source_id}/preview": {
    /** Knowledge Preview Source */
    get: operations["knowledge_preview_source_v1_knowledge_sources__source_id__preview_get"];
  };
  "/v1/knowledge/runs": {
    /** Knowledge Schedule Run */
    post: operations["knowledge_schedule_run_v1_knowledge_runs_post"];
  };
  "/v1/knowledge/web-harvest": {
    /** Knowledge Schedule Web Harvest */
    post: operations["knowledge_schedule_web_harvest_v1_knowledge_web_harvest_post"];
  };
  "/v1/assistant/message": {
    /** Assistant Message */
    post: operations["assistant_message_v1_assistant_message_post"];
  };
  "/v1/autopilot/schedules": {
    /** List Job Schedules */
    get: operations["list_job_schedules_v1_autopilot_schedules_get"];
    /** Create Job Schedule */
    post: operations["create_job_schedule_v1_autopilot_schedules_post"];
  };
  "/v1/autopilot/jobs": {
    /** List Jobs */
    get: operations["list_jobs_v1_autopilot_jobs_get"];
  };
  "/v1/autopilot/jobs/run": {
    /** Enqueue Job */
    post: operations["enqueue_job_v1_autopilot_jobs_run_post"];
  };
  "/v1/observability/dry-run": {
    /**
     * Sentry Dry Run
     * @description Intentionally raises a server error to validate Sentry/alerts.
     *
     * Guarded by `ALLOW_SENTRY_DRY_RUN` env var. Requires a valid Bearer token.
     * Call with a unique `X-Request-ID` for traceability.
     */
    post: operations["sentry_dry_run_v1_observability_dry_run_post"];
  };
  "/health": {
    /** Health */
    get: operations["health_health_get"];
  };
  "/healthz": {
    /** Healthz */
    get: operations["healthz_healthz_get"];
  };
  "/readiness": {
    /** Readiness Probe */
    get: operations["readiness_probe_readiness_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AcceptInviteRequest */
    AcceptInviteRequest: {
      /** Token */
      token: string;
      /** Userid */
      userId: string;
      /** Displayname */
      displayName: string;
      /** Email */
      email?: string | null;
      /** Phonee164 */
      phoneE164?: string | null;
      /** Whatsappe164 */
      whatsappE164?: string | null;
      /** Locale */
      locale?: string | null;
      /** Timezone */
      timezone?: string | null;
    };
    /**
     * AdaExceptionDisposition
     * @enum {string}
     */
    AdaExceptionDisposition: "OPEN" | "INVESTIGATING" | "RESOLVED";
    /** AdaExceptionUpdateRequest */
    AdaExceptionUpdateRequest: {
      /** Orgid */
      orgId: string;
      /** Userid */
      userId: string;
      /** Exceptionid */
      exceptionId: string;
      disposition?: components["schemas"]["AdaExceptionDisposition"] | null;
      /** Note */
      note?: string | null;
      /** Misstatementid */
      misstatementId?: string | null;
    };
    /**
     * AdaRunKind
     * @enum {string}
     */
    AdaRunKind: "JE" | "RATIO" | "VARIANCE" | "DUPLICATE" | "BENFORD";
    /** AdaRunRequest */
    AdaRunRequest: {
      /** Orgid */
      orgId: string;
      /** Engagementid */
      engagementId: string;
      /** Userid */
      userId: string;
      /** Datasetref */
      datasetRef: string;
      kind: components["schemas"]["AdaRunKind"];
      /** Params */
      params?: {
        [key: string]: unknown;
      };
    };
    /** AdminOrgSettingsUpdateRequest */
    AdminOrgSettingsUpdateRequest: {
      /** Orgid */
      orgId: string;
      /** Allowedemaildomains */
      allowedEmailDomains?: string[] | null;
      /** Defaultrole */
      defaultRole?: string | null;
      /** Requiremfaforsensitive */
      requireMfaForSensitive?: boolean | null;
      /** Impersonationbreakglassemails */
      impersonationBreakglassEmails?: string[] | null;
    };
    /** AssistantMessageRequest */
    AssistantMessageRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Message */
      message?: string | null;
      /** Tool */
      tool?: string | null;
      /** Args */
      args?: {
        [key: string]: unknown;
      };
    };
    /** Body_ingest_v1_rag_ingest_post */
    Body_ingest_v1_rag_ingest_post: {
      /**
       * File
       * Format: binary
       */
      file: string;
      /** Org Slug Form */
      org_slug_form: string;
      /** Document Id */
      document_id?: string;
    };
    /** Body_upload_document_endpoint_v1_storage_documents_post */
    Body_upload_document_endpoint_v1_storage_documents_post: {
      /**
       * File
       * Format: binary
       */
      file: string;
      /** Org Slug Form */
      org_slug_form: string;
      /** Entity Id */
      entity_id?: string | null;
      /** Repo Folder */
      repo_folder?: string | null;
      /** Name Override */
      name_override?: string | null;
    };
    /** ControlCreateRequest */
    ControlCreateRequest: {
      /** Orgid */
      orgId: string;
      /** Engagementid */
      engagementId: string;
      /** Userid */
      userId: string;
      /** Cycle */
      cycle: string;
      /** Objective */
      objective: string;
      /** Description */
      description: string;
      /**
       * Frequency
       * @default MONTHLY
       */
      frequency?: string;
      /** Owner */
      owner?: string | null;
      /**
       * Key
       * @default true
       */
      key?: boolean;
    };
    /** ControlTestAttribute */
    ControlTestAttribute: {
      /** Id */
      id: string;
      /** Description */
      description?: string | null;
      /**
       * Passed
       * @default true
       */
      passed?: boolean;
      /** Note */
      note?: string | null;
      /** Sampleitemid */
      sampleItemId?: string | null;
      /** Populationref */
      populationRef?: string | null;
      /** Stratum */
      stratum?: string | null;
      /** Manualreference */
      manualReference?: string | null;
    };
    /** ControlTestRequest */
    ControlTestRequest: {
      /** Orgid */
      orgId: string;
      /** Engagementid */
      engagementId: string;
      /** Controlid */
      controlId: string;
      /** Userid */
      userId: string;
      /** Attributes */
      attributes: components["schemas"]["ControlTestAttribute"][];
      /** Result */
      result: string;
      /** Deficiencyrecommendation */
      deficiencyRecommendation?: string | null;
      /** Deficiencyseverity */
      deficiencySeverity?: string | null;
    };
    /** ControlWalkthroughRequest */
    ControlWalkthroughRequest: {
      /** Orgid */
      orgId: string;
      /** Controlid */
      controlId: string;
      /** Userid */
      userId: string;
      /** Date */
      date: string;
      /** Result */
      result: string;
      /** Notes */
      notes?: string | null;
    };
    /** CreateOrgRequest */
    CreateOrgRequest: {
      /** Name */
      name: string;
      /** Slug */
      slug: string;
      /** Autonomylevel */
      autonomyLevel?: string | null;
      /** Autopilotlevel */
      autopilotLevel?: number | null;
    };
    /** DocumentExtractionUpdateRequest */
    DocumentExtractionUpdateRequest: {
      /** Extractionid */
      extractionId?: string | null;
      /** Extractorname */
      extractorName?: string | null;
      /** Extractorversion */
      extractorVersion?: string | null;
      /** Status */
      status: string;
      /** Fields */
      fields?: {
        [key: string]: unknown;
      } | null;
      /** Confidence */
      confidence?: number | null;
      /** Provenance */
      provenance?: {
          [key: string]: unknown;
        }[] | null;
      /** Documenttype */
      documentType?: string | null;
    };
    /** DocumentSignRequest */
    DocumentSignRequest: {
      /** Documentid */
      documentId: string;
      /**
       * Ttlseconds
       * @default 900
       */
      ttlSeconds?: number | null;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: components["schemas"]["ValidationError"][];
    };
    /** ImpersonationApproveBody */
    ImpersonationApproveBody: {
      /** Orgid */
      orgId: string;
      /** Grantid */
      grantId: string;
      /** Expiresat */
      expiresAt?: string | null;
    };
    /** ImpersonationRequestBody */
    ImpersonationRequestBody: {
      /** Orgid */
      orgId: string;
      /** Targetuserid */
      targetUserId: string;
      /** Reason */
      reason?: string | null;
      /** Expiresat */
      expiresAt?: string | null;
    };
    /** ImpersonationRevokeBody */
    ImpersonationRevokeBody: {
      /** Orgid */
      orgId: string;
      /** Grantid */
      grantId: string;
    };
    /** InviteMemberRequest */
    InviteMemberRequest: {
      /** Orgid */
      orgId: string;
      /** Emailorphone */
      emailOrPhone: string;
      /** Role */
      role: string;
      /** Expiresat */
      expiresAt?: string | null;
    };
    /** JobRunRequest */
    JobRunRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Kind */
      kind: string;
      /** Payload */
      payload?: {
        [key: string]: unknown;
      };
    };
    /** JobScheduleRequest */
    JobScheduleRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Kind */
      kind: string;
      /** Cronexpression */
      cronExpression: string;
      /**
       * Active
       * @default true
       */
      active?: boolean;
      /** Metadata */
      metadata?: {
        [key: string]: unknown;
      };
    };
    /** KnowledgeCorpusRequest */
    KnowledgeCorpusRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Name */
      name: string;
      /** Domain */
      domain: string;
      /** Jurisdictions */
      jurisdictions?: string[];
      /** Retention */
      retention?: string | null;
      /**
       * Isdefault
       * @default false
       */
      isDefault?: boolean;
    };
    /** KnowledgeSourceRequest */
    KnowledgeSourceRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Corpusid */
      corpusId: string;
      /** Provider */
      provider: string;
      /** Sourceuri */
      sourceUri: string;
    };
    /** LearningRunRequest */
    LearningRunRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Sourceid */
      sourceId: string;
      /** Agentkind */
      agentKind: string;
      /** Mode */
      mode: string;
    };
    /** NotificationUpdateRequest */
    NotificationUpdateRequest: {
      /** Read */
      read?: boolean | null;
    };
    /** NotificationsMarkAllRequest */
    NotificationsMarkAllRequest: {
      /** Orgslug */
      orgSlug: string;
    };
    /** OnboardingCommitRequest */
    OnboardingCommitRequest: {
      /** Checklistid */
      checklistId: string;
      /** Profile */
      profile?: {
        [key: string]: unknown;
      };
    };
    /** OnboardingLinkDocRequest */
    OnboardingLinkDocRequest: {
      /** Checklistid */
      checklistId: string;
      /** Itemid */
      itemId: string;
      /** Documentid */
      documentId: string;
    };
    /** OnboardingStartRequest */
    OnboardingStartRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Industry */
      industry: string;
      /** Country */
      country: string;
    };
    /** PolicyPackUpdateRequest */
    PolicyPackUpdateRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Policypackid */
      policyPackId: string;
      /** Summary */
      summary?: string | null;
      /** Diff */
      diff?: {
        [key: string]: unknown;
      } | null;
    };
    /** ProfileUpdateRequest */
    ProfileUpdateRequest: {
      /** Displayname */
      displayName?: string | null;
      /** Phonee164 */
      phoneE164?: string | null;
      /** Whatsappe164 */
      whatsappE164?: string | null;
      /** Avatarurl */
      avatarUrl?: string | null;
      /** Locale */
      locale?: string | null;
      /** Timezone */
      timezone?: string | null;
      /** Orgid */
      orgId?: string | null;
      /** Theme */
      theme?: string | null;
      /** Notifications */
      notifications?: {
        [key: string]: unknown;
      } | null;
    };
    /** ReconciliationAddItemRequest */
    ReconciliationAddItemRequest: {
      /** Orgid */
      orgId: string;
      /** Reconciliationid */
      reconciliationId: string;
      item: components["schemas"]["ReconciliationItemPayload"];
    };
    /** ReconciliationCloseRequest */
    ReconciliationCloseRequest: {
      /** Orgid */
      orgId: string;
      /** Reconciliationid */
      reconciliationId: string;
      /** Userid */
      userId: string;
      /** Scheduledocumentid */
      scheduleDocumentId?: string | null;
    };
    /** ReconciliationCreateRequest */
    ReconciliationCreateRequest: {
      /** Orgid */
      orgId: string;
      /** Engagementid */
      engagementId: string;
      /** Entityid */
      entityId: string;
      /** Periodid */
      periodId: string;
      /** Type */
      type: string;
      /** Externalbalance */
      externalBalance: number | string;
      /** Controlaccountid */
      controlAccountId?: string | null;
      /** Preparedbyuserid */
      preparedByUserId?: string | null;
      /** Glbalance */
      glBalance?: number | string | null;
    };
    /** ReconciliationItemPayload */
    ReconciliationItemPayload: {
      /** Category */
      category: string;
      /** Amount */
      amount: number | string;
      /** Reference */
      reference?: string | null;
      /** Note */
      note?: string | null;
      /**
       * Resolved
       * @default false
       */
      resolved?: boolean;
    };
    /** ReembedRequest */
    ReembedRequest: {
      /** Chunks */
      chunks: number[];
      /** Org Slug */
      org_slug: string;
    };
    /** RevokeInviteRequest */
    RevokeInviteRequest: {
      /** Orgid */
      orgId: string;
      /** Inviteid */
      inviteId: string;
    };
    /** SearchRequest */
    SearchRequest: {
      /** Query */
      query: string;
      /**
       * K
       * @default 5
       */
      k?: number;
      /** Org Slug */
      org_slug: string;
    };
    /** TaskAttachmentRequest */
    TaskAttachmentRequest: {
      /** Documentid */
      documentId: string;
      /** Note */
      note?: string | null;
    };
    /** TaskCommentRequest */
    TaskCommentRequest: {
      /** Body */
      body: string;
    };
    /** TaskCreateRequest */
    TaskCreateRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Title */
      title: string;
      /** Description */
      description?: string | null;
      /**
       * Status
       * @default TODO
       */
      status?: string | null;
      /**
       * Priority
       * @default MEDIUM
       */
      priority?: string | null;
      /** Engagementid */
      engagementId?: string | null;
      /** Assigneeid */
      assigneeId?: string | null;
      /** Duedate */
      dueDate?: string | null;
    };
    /** TaskUpdateRequest */
    TaskUpdateRequest: {
      /** Title */
      title?: string | null;
      /** Description */
      description?: string | null;
      /** Status */
      status?: string | null;
      /** Priority */
      priority?: string | null;
      /** Engagementid */
      engagementId?: string | null;
      /** Assigneeid */
      assigneeId?: string | null;
      /** Duedate */
      dueDate?: string | null;
    };
    /** TeamCreateRequest */
    TeamCreateRequest: {
      /** Orgid */
      orgId: string;
      /** Name */
      name: string;
      /** Description */
      description?: string | null;
    };
    /** TeamMemberAddRequest */
    TeamMemberAddRequest: {
      /** Orgid */
      orgId: string;
      /** Teamid */
      teamId: string;
      /** Userid */
      userId: string;
      /** Role */
      role?: string | null;
    };
    /** TeamMemberRemoveRequest */
    TeamMemberRemoveRequest: {
      /** Orgid */
      orgId: string;
      /** Teamid */
      teamId: string;
      /** Userid */
      userId: string;
    };
    /** UpdateRoleRequest */
    UpdateRoleRequest: {
      /** Orgid */
      orgId: string;
      /** Userid */
      userId: string;
      /** Role */
      role: string;
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
    /** WebHarvestRequest */
    WebHarvestRequest: {
      /** Orgslug */
      orgSlug: string;
      /** Websourceid */
      webSourceId: string;
      /** Agentkind */
      agentKind: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** Create Organization */
  create_organization_api_iam_org_create_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateOrgRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Members */
  list_members_api_iam_members_list_get: {
    parameters: {
      query: {
        orgId: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Invite Member */
  invite_member_api_iam_members_invite_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["InviteMemberRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Check Release Controls */
  check_release_controls_api_release_controls_check_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": {
          [key: string]: unknown;
        };
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Accept Invite */
  accept_invite_api_iam_members_accept_post: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AcceptInviteRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Revoke Invite */
  revoke_invite_api_iam_members_revoke_invite_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["RevokeInviteRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Admin Org Settings */
  get_admin_org_settings_api_admin_org_settings_get: {
    parameters: {
      query: {
        orgId: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Admin Org Settings */
  update_admin_org_settings_api_admin_org_settings_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminOrgSettingsUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Admin Audit Log */
  list_admin_audit_log_api_admin_auditlog_list_get: {
    parameters: {
      query: {
        orgId: string;
        limit?: number;
        after?: string | null;
        module?: string | null;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Impersonation Grants */
  list_impersonation_grants_api_admin_impersonation_list_get: {
    parameters: {
      query: {
        orgId: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Request Impersonation */
  request_impersonation_api_admin_impersonation_request_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ImpersonationRequestBody"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Approve Impersonation */
  approve_impersonation_api_admin_impersonation_approve_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ImpersonationApproveBody"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Revoke Impersonation */
  revoke_impersonation_api_admin_impersonation_revoke_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ImpersonationRevokeBody"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Member Role */
  update_member_role_api_iam_members_update_role_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateRoleRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Profile */
  get_profile_api_iam_profile_get_get: {
    parameters: {
      query?: {
        orgId?: string | null;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Profile */
  update_profile_api_iam_profile_update_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ProfileUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Team */
  create_team_api_iam_teams_create_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamCreateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Team Member */
  add_team_member_api_iam_teams_add_member_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamMemberAddRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Remove Team Member */
  remove_team_member_api_iam_teams_remove_member_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TeamMemberRemoveRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Ingest */
  ingest_v1_rag_ingest_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_ingest_v1_rag_ingest_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: number;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Search */
  search_v1_rag_search_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["SearchRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Reembed */
  reembed_v1_rag_reembed_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReembedRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: number;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Ada Runs */
  list_ada_runs_api_ada_run_get: {
    parameters: {
      query: {
        orgId: string;
        engagementId: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Ada Run */
  create_ada_run_api_ada_run_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdaRunRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Ada Exception */
  update_ada_exception_api_ada_exception_update_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdaExceptionUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Controls */
  get_controls_api_controls_get: {
    parameters: {
      query: {
        orgId: string;
        engagementId: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Control */
  create_control_api_controls_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ControlCreateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Control Walkthrough */
  create_control_walkthrough_api_controls_walkthrough_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ControlWalkthroughRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Run Control Test */
  run_control_test_api_controls_test_run_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ControlTestRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Reconciliations */
  list_reconciliations_api_recon_get: {
    parameters: {
      query: {
        orgId: string;
        entityId: string;
        periodId: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Reconciliation */
  create_reconciliation_api_recon_create_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReconciliationCreateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Add Reconciliation Item */
  add_reconciliation_item_api_recon_add_item_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReconciliationAddItemRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Close Reconciliation */
  close_reconciliation_api_recon_close_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["ReconciliationCloseRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Tasks */
  list_tasks_v1_tasks_get: {
    parameters: {
      query: {
        orgSlug: string;
        limit?: number;
        offset?: number;
        status?: string | null;
        assignee?: string | null;
        engagementId?: string | null;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Task */
  create_task_v1_tasks_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskCreateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Task */
  update_task_v1_tasks__task_id__patch: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        task_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Task Comments */
  list_task_comments_v1_tasks__task_id__comments_get: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        task_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Task Comment */
  create_task_comment_v1_tasks__task_id__comments_post: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        task_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskCommentRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Attach Document To Task */
  attach_document_to_task_v1_tasks__task_id__attachments_post: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        task_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["TaskAttachmentRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Documents Endpoint */
  list_documents_endpoint_v1_storage_documents_get: {
    parameters: {
      query: {
        orgSlug: string;
        limit?: number;
        offset?: number;
        repo?: string | null;
        state?: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Upload Document Endpoint */
  upload_document_endpoint_v1_storage_documents_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "multipart/form-data": components["schemas"]["Body_upload_document_endpoint_v1_storage_documents_post"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Document Endpoint */
  delete_document_endpoint_v1_storage_documents__document_id__delete: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        document_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: string;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Restore Document Endpoint */
  restore_document_endpoint_v1_storage_documents__document_id__restore_post: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        document_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: string;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Sign Document Endpoint */
  sign_document_endpoint_v1_storage_sign_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DocumentSignRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: string;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Document Extraction Update */
  document_extraction_update_v1_documents__document_id__extraction_post: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        document_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["DocumentExtractionUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Notifications */
  list_notifications_v1_notifications_get: {
    parameters: {
      query: {
        orgSlug: string;
        limit?: number;
        offset?: number;
        unreadOnly?: boolean | null;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Notification */
  update_notification_v1_notifications__notification_id__patch: {
    parameters: {
      header: {
        authorization: string;
      };
      path: {
        notification_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotificationUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Mark All Notifications */
  mark_all_notifications_v1_notifications_mark_all_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["NotificationsMarkAllRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: string;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Onboarding Start */
  onboarding_start_v1_onboarding_start_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OnboardingStartRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Update Policy Pack Endpoint */
  update_policy_pack_endpoint_v1_policy_packs_update_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["PolicyPackUpdateRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Onboarding Link Document */
  onboarding_link_document_v1_onboarding_link_doc_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OnboardingLinkDocRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Onboarding Commit */
  onboarding_commit_v1_onboarding_commit_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["OnboardingCommitRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Autonomy Status */
  autonomy_status_v1_autonomy_status_get: {
    parameters: {
      query: {
        orgSlug: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Drive Metadata */
  knowledge_drive_metadata_v1_knowledge_drive_metadata_get: {
    parameters: {
      query: {
        orgSlug: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Drive Status */
  knowledge_drive_status_v1_knowledge_drive_status_get: {
    parameters: {
      query: {
        orgSlug: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Web Sources */
  knowledge_web_sources_v1_knowledge_web_sources_get: {
    parameters: {
      query: {
        orgSlug: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Create Corpus */
  knowledge_create_corpus_v1_knowledge_corpora_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeCorpusRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Create Source */
  knowledge_create_source_v1_knowledge_sources_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["KnowledgeSourceRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Preview Source */
  knowledge_preview_source_v1_knowledge_sources__source_id__preview_get: {
    parameters: {
      query: {
        orgSlug: string;
      };
      header: {
        authorization: string;
      };
      path: {
        source_id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Schedule Run */
  knowledge_schedule_run_v1_knowledge_runs_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["LearningRunRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Knowledge Schedule Web Harvest */
  knowledge_schedule_web_harvest_v1_knowledge_web_harvest_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["WebHarvestRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Assistant Message */
  assistant_message_v1_assistant_message_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AssistantMessageRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Job Schedules */
  list_job_schedules_v1_autopilot_schedules_get: {
    parameters: {
      query: {
        orgSlug: string;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Create Job Schedule */
  create_job_schedule_v1_autopilot_schedules_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["JobScheduleRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** List Jobs */
  list_jobs_v1_autopilot_jobs_get: {
    parameters: {
      query: {
        orgSlug: string;
        status?: string | null;
      };
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Enqueue Job */
  enqueue_job_v1_autopilot_jobs_run_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["JobRunRequest"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": {
            [key: string]: unknown;
          };
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /**
   * Sentry Dry Run
   * @description Intentionally raises a server error to validate Sentry/alerts.
   *
   * Guarded by `ALLOW_SENTRY_DRY_RUN` env var. Requires a valid Bearer token.
   * Call with a unique `X-Request-ID` for traceability.
   */
  sentry_dry_run_v1_observability_dry_run_post: {
    parameters: {
      header: {
        authorization: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Health */
  health_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Healthz */
  healthz_healthz_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
  /** Readiness Probe */
  readiness_probe_readiness_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": unknown;
        };
      };
    };
  };
}
