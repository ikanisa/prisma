// minimal boot file to prove function is alive.
// GET: handles WA verify token handshake
// POST: logs the body and returns "ok"
import { serve } from "https://deno.land/std@0.177.0/http/server.ts";

const WA_VERIFY_TOKEN = Deno.env.get("WA_VERIFY_TOKEN") || "";

serve(async (req: Request) => {
  if (req.method === "GET") {
    const u = new URL(req.url);
    if (
      u.searchParams.get("hub.mode") === "subscribe" &&
      u.searchParams.get("hub.verify_token") === WA_VERIFY_TOKEN
    ) {
      return new Response(u.searchParams.get("hub.challenge") || "", { status: 200 });
    }
    return new Response("wa-webhook up", { status: 200 });
  }

  if (req.method === "POST") {
    const body = await req.text();
    console.log("[wa-webhook] POST body (first 512):", body.slice(0, 512));
    return new Response("ok", { status: 200 });
  }

  return new Response("ok", { status: 200 });
});

// --- safe home sender (appended) ---
async function sendHomeSafe(to: string) {
  try {
    await sendHome(to);
  } catch (e) {
    console.error("[wa-webhook] sendHome error", e);
    try {
      await sendText(to, "Welcome ðŸ‘‹\nIf the menu doesnâ€™t show, reply: menu");
    } catch (e2) {
      console.error("[wa-webhook] sendText fallback failed", e2);
    }
  }
}
// --- end safe home sender ---
