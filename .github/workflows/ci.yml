name: Monorepo CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  root-app:
    name: Root lint/test/build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Install dependencies (root)
        run: npm ci
      - name: Lint (root)
        run: npm run lint
      - name: Test (root)
        run: npm run test
      - name: Build (root)
        run: npm run build

  next-web:
    name: Next.js + Prisma
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:5432/postgres
      DIRECT_URL: postgresql://postgres:postgres@127.0.0.1:5432/postgres
      SKIP_HEALTHCHECK_DB: 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - name: Install dependencies (Next.js app)
        run: npm ci
        working-directory: apps/web
      - name: Prisma validate
        run: npx prisma validate
        working-directory: apps/web
      - name: Prisma generate
        run: npm run prisma:generate
        working-directory: apps/web
      - name: Prisma migration diff (dry-run)
        run: npx prisma migrate diff --from-empty --to-schema-datamodel ./prisma/schema.prisma --script
        working-directory: apps/web
      - name: Lint (Next.js)
        run: npm run lint
        working-directory: apps/web
      - name: Build (Next.js)
        run: npm run build
        working-directory: apps/web
