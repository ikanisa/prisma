name: Release Pipeline

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. v1.2.0)'
        required: true
      promote_canary:
        type: boolean
        default: false
        description: 'Promote canary to 100% after smoke tests'

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Verify tag readiness
        run: |
          git fetch --tags
          if git rev-parse ${{ github.event.inputs.version }} >/dev/null 2>&1; then
            echo "Tag already exists" >&2
            exit 1
          fi
      - name: Install dependencies
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: true
      - name: Run CI Suite
        run: |
          pnpm run lint
          pnpm run typecheck
          pnpm run coverage
          pnpm run build
      - name: Lighthouse & ZAP
        run: |
          npx @lhci/cli autorun --config=./lighthouserc.json
          pnpm run security:zap || true
      - name: Create release tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}

  deploy:
    runs-on: ubuntu-latest
    needs: prepare
    environment:
      name: production
      url: https://app.prismaglow.com
    steps:
      - uses: actions/checkout@v5
      - name: Deploy to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          npm install -g vercel@latest
          vercel pull --yes --environment=production --token=$VERCEL_TOKEN
          vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN
      - name: Smoke Tests
        run: pnpm run test:smoke
      - name: Promote Canary
        if: ${{ github.event.inputs.promote_canary == 'true' }}
        run: pnpm run deploy:canary -- --promote
      - name: Upload Deployment Notes
        uses: actions/upload-artifact@v4
        with:
          name: release-notes
          path: release-notes.md
