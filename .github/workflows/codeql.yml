name: CodeQL Security Analysis

on:
  push:
    branches: [ main, copilot/refactor/** ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run at 3:00 AM UTC every day
    - cron: '0 3 * * *'

concurrency:
  group: codeql-${{ github.ref }}
  cancel-in-progress: true

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://aka.ms/codeql-docs/language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          
          # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
          queries: +security-and-quality

      # Setup build environment based on language
      - name: Setup Node.js (JavaScript)
        if: matrix.language == 'javascript'
        uses: actions/setup-node@v4
        with:
          node-version: 20.19.4
          cache: 'pnpm'

      - name: Setup pnpm (JavaScript)
        if: matrix.language == 'javascript'
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install JavaScript dependencies
        if: matrix.language == 'javascript'
        run: pnpm install --frozen-lockfile

      - name: Setup Python
        if: matrix.language == 'python'
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        if: matrix.language == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r server/requirements.txt

      # Autobuild attempts to build any compiled languages (C/C++, C#, Go, or Java).
      # If this step fails, then you should remove it and run the build manually
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
          upload: true

      # Generate SARIF report for manual review
      - name: Upload SARIF as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: codeql-results-${{ matrix.language }}
          path: ${{ github.workspace }}/../results
          retention-days: 30

  # Summary job that reports overall status
  codeql-summary:
    name: CodeQL Summary
    runs-on: ubuntu-latest
    needs: analyze
    if: always()
    steps:
      - name: Check CodeQL status
        run: |
          if [ "${{ needs.analyze.result }}" == "failure" ]; then
            echo "❌ CodeQL analysis found security issues"
            echo "Review the security tab: https://github.com/${{ github.repository }}/security/code-scanning"
            exit 1
          elif [ "${{ needs.analyze.result }}" == "success" ]; then
            echo "✅ CodeQL analysis passed"
          else
            echo "⚠️ CodeQL analysis status: ${{ needs.analyze.result }}"
          fi
